{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linga\\\\QuickCommerce\\\\client\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiClient } from '../services/apiClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        await checkAuth();\n      } else {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const userData = await apiClient.getUserProfile();\n      setUser(userData);\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      setError(null);\n      setLoading(true);\n      const data = await apiClient.login(credentials);\n      setUser(data.user);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loginWithGoogle = async token => {\n    try {\n      setError(null);\n      setLoading(true);\n      const data = await apiClient.loginWithGoogle(token);\n      setUser(data.user);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    apiClient.clearTokens();\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    loginWithGoogle\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiClient","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","initAuth","token","localStorage","getItem","checkAuth","userData","getUserProfile","err","console","logout","login","credentials","data","message","loginWithGoogle","clearTokens","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/linga/QuickCommerce/client/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { apiClient } from '../services/apiClient';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        await checkAuth();\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    initAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const userData = await apiClient.getUserProfile();\r\n      setUser(userData);\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      const data = await apiClient.login(credentials);\r\n      setUser(data.user);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loginWithGoogle = async (token) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      const data = await apiClient.loginWithGoogle(token);\r\n      setUser(data.user);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    apiClient.clearTokens();\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    loginWithGoogle,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}