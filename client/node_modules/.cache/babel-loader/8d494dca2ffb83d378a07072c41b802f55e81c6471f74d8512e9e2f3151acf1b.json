{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n\n  // If error is 401 and we haven't tried to refresh token yet\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      const response = await refreshTokenApi(refreshToken);\n      localStorage.setItem('token', response.data.token);\n      api.defaults.headers.Authorization = `Bearer ${response.data.token}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // If refresh token fails, logout user\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Auth APIs\nexport const loginApi = credentials => api.post('/auth/login', credentials);\nexport const registerApi = userData => api.post('/auth/register', userData);\nexport const refreshTokenApi = () => api.post('/auth/refresh-token', {\n  refreshToken: localStorage.getItem('refreshToken')\n});\nexport const loginWithGoogle = () => api.get('/auth/google');\n\n// Product APIs\nexport const getProducts = params => api.get('/products', {\n  params\n});\nexport const getProduct = id => api.get(`/products/${id}`);\nexport const getCategories = () => api.get('/categories');\n\n// Cart APIs\nexport const getCart = () => api.get('/cart');\nexport const addToCart = (productId, quantity) => api.post('/cart/add', {\n  productId,\n  quantity\n});\nexport const updateCartItem = (itemId, quantity) => api.put(`/cart/items/${itemId}`, {\n  quantity\n});\nexport const removeFromCart = itemId => api.delete(`/cart/items/${itemId}`);\n\n// Order APIs\nexport const createOrder = orderData => api.post('/orders', orderData);\nexport const getOrders = () => api.get('/orders');\nexport const getOrder = orderId => api.get(`/orders/${orderId}`);\n\n// User Profile APIs\nexport const getUserProfile = () => api.get('/user/profile');\nexport const updateUserProfile = userData => api.put('/user/profile', userData);\n\n// Subscription APIs\nexport const getSubscriptionPlans = () => api.get('/subscriptions/plans');\nexport const subscribe = planId => api.post('/subscriptions/subscribe', {\n  planId\n});\nexport const cancelSubscription = () => api.post('/subscriptions/cancel');\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","refreshTokenApi","setItem","data","defaults","refreshError","removeItem","window","location","href","loginApi","credentials","post","registerApi","userData","loginWithGoogle","get","getProducts","params","getProduct","id","getCategories","getCart","addToCart","productId","quantity","updateCartItem","itemId","put","removeFromCart","delete","createOrder","orderData","getOrders","getOrder","orderId","getUserProfile","updateUserProfile","getSubscriptionPlans","subscribe","planId","cancelSubscription"],"sources":["C:/Users/linga/QuickCommerce/client/src/services/api.jsx"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // If error is 401 and we haven't tried to refresh token yet\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        const response = await refreshTokenApi(refreshToken);\r\n        \r\n        localStorage.setItem('token', response.data.token);\r\n        api.defaults.headers.Authorization = `Bearer ${response.data.token}`;\r\n        \r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // If refresh token fails, logout user\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth APIs\r\nexport const loginApi = (credentials) => api.post('/auth/login', credentials);\r\nexport const registerApi = (userData) => api.post('/auth/register', userData);\r\nexport const refreshTokenApi = () => api.post('/auth/refresh-token', {\r\n  refreshToken: localStorage.getItem('refreshToken'),\r\n});\r\nexport const loginWithGoogle = () => api.get('/auth/google');\r\n\r\n// Product APIs\r\nexport const getProducts = (params) => api.get('/products', { params });\r\nexport const getProduct = (id) => api.get(`/products/${id}`);\r\nexport const getCategories = () => api.get('/categories');\r\n\r\n// Cart APIs\r\nexport const getCart = () => api.get('/cart');\r\nexport const addToCart = (productId, quantity) => \r\n  api.post('/cart/add', { productId, quantity });\r\nexport const updateCartItem = (itemId, quantity) =>\r\n  api.put(`/cart/items/${itemId}`, { quantity });\r\nexport const removeFromCart = (itemId) =>\r\n  api.delete(`/cart/items/${itemId}`);\r\n\r\n// Order APIs\r\nexport const createOrder = (orderData) => api.post('/orders', orderData);\r\nexport const getOrders = () => api.get('/orders');\r\nexport const getOrder = (orderId) => api.get(`/orders/${orderId}`);\r\n\r\n// User Profile APIs\r\nexport const getUserProfile = () => api.get('/user/profile');\r\nexport const updateUserProfile = (userData) => \r\n  api.put('/user/profile', userData);\r\n\r\n// Subscription APIs\r\nexport const getSubscriptionPlans = () => api.get('/subscriptions/plans');\r\nexport const subscribe = (planId) => api.post('/subscriptions/subscribe', { planId });\r\nexport const cancelSubscription = () => api.post('/subscriptions/cancel');\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}